package Analizadores;
import java_cup.runtime.Symbol;
import java.util.LinkedList;

//parser,variables, metodos
parser code
{:
    public String resultado="";
    public static LinkedList<TError> TablaES = new LinkedList<TError>(); 

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        double fila = s.right;
        double columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError datos = new TError(lexema,fila,columna,"Error Sintactico","Caracter no esperado");
        TablaES.add(datos);
       
        
    }

    //metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        double fila = s.right;
        double columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError datos = new TError(lexema,fila,columna,"Error Sintactico","Caracter no esperado");
        TablaES.add(datos);
     
    }
:}


action code
{:
:}


// declaracion de terminales 
terminal mas,menos,por,div,para,parc,pyc;
terminal String num;

//declaracion de no terminales
non terminal String INICIO,E; 

//precedencia de menor a mayor
precedence left mas, menos;
precedence left por, div;
precedence left para, parc; 
start with INICIO;


INICIO::=E:a pyc {: resultado=a; :};

E::= E:a mas E:b {: double val1= Double.parseDouble(a);
                    double val2= Double.parseDouble(b);
                    double r = val1+val2;
                    RESULT = String.valueOf(r); :}
    |E:a menos E:b {: double val1= Double.parseDouble(a);
                    double val2= Double.parseDouble(b);
                    double r = val1-val2;
                    RESULT = String.valueOf(r); :}
    |E:a div E:b {: double val1= Double.parseDouble(a);;
                    double val2= Double.parseDouble(b);
                    double r = val1/val2;
                    RESULT = String.valueOf(r); :}
    |E:a por E:b {: double val1= Double.parseDouble(a);
                    double val2= Double.parseDouble(b);
                    double r = val1*val2;
                    RESULT = String.valueOf(r); :}
    |para E:a {: RESULT = a; :} parc
    |num:a {: RESULT = a; :};


